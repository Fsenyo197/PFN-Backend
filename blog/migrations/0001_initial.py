# Generated by Django 5.1 on 2025-01-28 16:42

import cloudinary.models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PropFirm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('about', models.TextField(blank=True)),
                ('website', models.URLField(blank=True, null=True, unique=True)),
                ('year_established', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('firm_type', models.CharField(blank=True, max_length=100)),
                ('drawdown_type', models.CharField(blank=True, max_length=100)),
                ('payout_frequency', models.CharField(blank=True, max_length=100)),
                ('copy_trading_rule', models.BooleanField(default=False)),
                ('consistency_rule', models.BooleanField(default=False)),
                ('two_percent_rule', models.BooleanField(default=False)),
                ('stop_loss_rule', models.BooleanField(default=False)),
                ('vpn_and_vps_rule', models.BooleanField(default=False)),
                ('weekend_holding_rule', models.BooleanField(default=False)),
                ('countries_prohibited', models.TextField(blank=True)),
                ('payout_options', models.JSONField(blank=True, default=list, verbose_name=models.CharField(choices=[('Bank Transfer', 'Bank Transfer'), ('Rise', 'Rise'), ('Direct Crypto', 'Direct Crypto'), ('Wise', 'Wise')], max_length=250))),
                ('payment_options', models.JSONField(blank=True, default=list, verbose_name=models.CharField(choices=[('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('Bank Transfer', 'Bank Transfer'), ('Cryptocurrency', 'Cryptocurrency'), ('PayPal', 'PayPal'), ('Koka', 'Koka'), ('Skrill', 'Skrill'), ('Neteller', 'Neteller'), ('Google Pay', 'Google Pay'), ('Apple Pay', 'Apple Pay'), ('Payoneer', 'Payoneer'), ('Paysafe Card', 'Paysafe Card'), ('Wise', 'Wise'), ('Astropay', 'Astropay')], max_length=250))),
                ('trading_platforms', models.JSONField(blank=True, default=list, verbose_name=models.CharField(choices=[('MT4', 'MT4'), ('MT5', 'MT5'), ('CTrader', 'CTrader'), ('MatchTrader', 'MatchTrader'), ('DXTrade', 'DXTrade'), ('TradeLocker', 'TradeLocker'), ('Trading View', 'Trading View'), ('In-House Trading Platform', 'In-House Trading Platform')], max_length=250))),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], db_index=True, default='draft', max_length=10)),
                ('date_published', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True)),
                ('date_created', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, unique=True)),
                ('secret', models.CharField(max_length=40)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('approved', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'constraints': [models.UniqueConstraint(fields=('name',), name='unique_category_name')],
            },
        ),
        migrations.CreateModel(
            name='AccountPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(choices=[('one_phase', 'One Phase'), ('two_phase', 'Two Phase'), ('three_phase', 'Three Phase'), ('four_phase', 'Four Phase'), ('instant_funding', 'Instant Funding')], db_index=True, default='two_phase', max_length=50)),
                ('account_type', models.CharField(choices=[('Forex', 'Forex'), ('Stocks', 'Stocks'), ('Crypto', 'Crypto'), ('Futures', 'Futures')], default='Forex', max_length=50)),
                ('account_size', models.CharField(db_index=True, max_length=50)),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=20)),
                ('profit_split_ratio', models.CharField(default='0', max_length=50)),
                ('leverage', models.CharField(default='0', max_length=50)),
                ('minimum_trading_days', models.CharField(default='0', max_length=50)),
                ('profit_target', models.CharField(default='0', max_length=50)),
                ('phase_time_limit', models.CharField(default='0', max_length=50)),
                ('daily_drawdown', models.CharField(default='0', max_length=10)),
                ('total_drawdown', models.CharField(default='0', max_length=10)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('is_available', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], db_index=True, default='draft', max_length=10)),
                ('prop_firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_plans', to='blog.propfirm')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(unique=True)),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('image_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Cloudinary Image URL')),
                ('image_credit', models.CharField(blank=True, max_length=250, null=True)),
                ('body', models.TextField(blank=True)),
                ('date_published', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFTED', 'Draft'), ('PUBLISHED', 'Publish')], default='DRAFTED', max_length=10)),
                ('views', models.PositiveIntegerField(default=0)),
                ('count_words', models.PositiveIntegerField(default=0)),
                ('read_time', models.PositiveIntegerField(default=0)),
                ('deleted', models.BooleanField(default=False)),
                ('firm_name', models.CharField(blank=True, max_length=250, null=True)),
                ('discount_code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('website_domain', models.URLField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=250, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='blog.category')),
            ],
            options={
                'ordering': ('-date_published',),
                'constraints': [models.UniqueConstraint(fields=('title',), name='unique_title')],
            },
        ),
    ]
